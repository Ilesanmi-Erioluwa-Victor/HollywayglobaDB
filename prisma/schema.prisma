// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Admin {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  Product Product[]
}

model User {
  id                              String     @id @default(auto()) @map("_id") @db.ObjectId
  firstName                       String
  lastName                        String
  email                           String     @unique
  mobile                          String     @unique
  password                        String
  isBlocked                       Boolean    @default(false)
  passwordChangeAt                DateTime   @default(now())
  passwordResetToken              String     @default("")
  passwordResetExpires            DateTime   @default(now())
  address                         Address[]
  wishlist                        WishList[]
  refreshToken                    String?    @default("")
  active                          Boolean    @default(true)
  profilePhoto                    String     @default("'https://cdn.pixabay.com/photo/2021/07/02/04/48/user-6380868_1280.png")
  isAccountVerified               Boolean    @default(false)
  accountVerificationToken        String?
  accountVerificationTokenExpires DateTime?  @default(now())
  createdAt                       DateTime   @default(now())
  updatedAt                       DateTime   @updatedAt
  v                               Int?       @map("__v")
}

model Address {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])
  userId String @db.ObjectId
}

model Product {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  admin       Admin    @relation(fields: [adminId], references: [id])
  adminId     String   @db.ObjectId
  title       String
  slug        String   @unique
  description String
  price       Int
  category    String
  quantity    Int
  images      String[]
  brand       String
  sold        Int      @default(0)
  color       String
  // ratings     Rating   @relation(fields: [ratingId], references: [id])
  // ratingId    String   @db.ObjectId
}

// model Rating {
//   id      String    @id @default(auto()) @map("_id") @db.ObjectId
//   adminId String    @db.ObjectId
//   Product Product[]
// }

model WishList {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])
  userId String @db.ObjectId
}
